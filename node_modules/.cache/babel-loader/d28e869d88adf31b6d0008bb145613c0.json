{"ast":null,"code":"var _jsxFileName = \"/Users/ajayjarhad/Desktop/Work/canonic-samples/Marketplace-App/src/components/product/Product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, Rating } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Product(_ref) {\n  _s();\n\n  let {\n    title,\n    price,\n    rating,\n    image,\n    price_api,\n    isLoggedIn\n  } = _ref;\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_API);\n  const [loading, setLoading] = useState();\n\n  const handleClick = async () => {\n    if (isLoggedIn) {\n      setLoading(true);\n      const stripe = await stripePromise;\n      const {\n        error\n      } = await stripe.redirectToCheckout({\n        lineItems: [{\n          price: price_api,\n          quantity: 1\n        }],\n        mode: \"payment\",\n        cancelUrl: \"http://localhost:3000\",\n        successUrl: \"http://localhost:3000/home\"\n      });\n\n      if (error) {\n        setLoading(false);\n        console.log(\"The error \", error);\n      }\n    } else alert(\"Please log in to continue\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxHeight: 450,\n      minWidth: 100,\n      width: \"25%\",\n      margin: \"1.5rem\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      alignItems: \"start\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      alt: \"title\",\n      height: \"auto\",\n      image: image,\n      sx: {\n        objectFit: \"contain\",\n        maxHeight: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: [\"$\", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        name: \"read-only\",\n        value: rating,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        onClick: handleClick,\n        disabled: loading,\n        children: \"Buy now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product, \"K/axW8qmKxblEM+Uh6/ex1I7UHA=\");\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/ajayjarhad/Desktop/Work/canonic-samples/Marketplace-App/src/components/product/Product.js"],"names":["React","useState","loadStripe","Card","CardActions","CardContent","CardMedia","Button","Typography","Rating","Product","title","price","rating","image","price_api","isLoggedIn","stripePromise","process","env","REACT_APP_STRIPE_API","loading","setLoading","handleClick","stripe","error","redirectToCheckout","lineItems","quantity","mode","cancelUrl","successUrl","console","log","alert","maxHeight","minWidth","width","margin","display","flexDirection","justifyContent","alignItems","objectFit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  Rating,\n} from \"@mui/material\";\n\nfunction Product({ title, price, rating, image, price_api, isLoggedIn }) {\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_API);\n  const [loading, setLoading] = useState();\n  const handleClick = async () => {\n    if (isLoggedIn) {\n      setLoading(true);\n      const stripe = await stripePromise;\n      const { error } = await stripe.redirectToCheckout({\n        lineItems: [\n          {\n            price: price_api,\n            quantity: 1,\n          },\n        ],\n        mode: \"payment\",\n        cancelUrl: \"http://localhost:3000\",\n        successUrl: \"http://localhost:3000/home\",\n      });\n      if (error) {\n        setLoading(false);\n        console.log(\"The error \", error);\n      }\n    } else alert(\"Please log in to continue\");\n  };\n  return (\n    <Card\n      sx={{\n        maxHeight: 450,\n        minWidth: 100,\n        width: \"25%\",\n        margin: \"1.5rem\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        alignItems: \"start\",\n      }}\n    >\n      <CardMedia\n        component=\"img\"\n        alt=\"title\"\n        height=\"auto\"\n        image={image}\n        sx={{ objectFit: \"contain\", maxHeight: \"200px\" }}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {title}\n        </Typography>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          ${price}\n        </Typography>\n        <Rating name=\"read-only\" value={rating} readOnly />\n      </CardContent>\n      <CardActions>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleClick}\n          disabled={loading}\n        >\n          Buy now\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}